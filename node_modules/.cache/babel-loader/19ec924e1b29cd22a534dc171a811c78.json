{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moonh\\\\Documents\\\\GitHub\\\\react-demo-app1\\\\src\\\\MainContents.js\";\nimport React from 'react';\nimport Contents from './contents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainContents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      param: {}\n    };\n  }\n\n  componentDidMount() {\n    //URLパラメータを文字列で取得(?含む)\n    let urlParamStr = window.location.search;\n\n    if (urlParamStr) {\n      //?を除去\n      urlParamStr = urlParamStr.substring(1);\n      let params = {}; //urlパラメータをオブジェクトにまとめる\n\n      urlParamStr.split('&').forEach(param => {\n        const temp = param.split('='); //pramsオブジェクトにパラメータを追加\n\n        params = { ...params,\n          [temp[0]]: temp[1]\n        };\n      });\n      let tmp = this.state;\n      this.setState({ ...tmp,\n        param: params\n      });\n    } // 記事を取得\n\n\n    const key = {\n      headers: {\n        'X-API-KEY': '9b30e206-4b28-4453-91f5-5d39d40d15a3'\n      }\n    };\n    return fetch('https://ponsuke.microcms.io/api/v1/diary', key).then(response => response.json()).then(responseJson => {\n      let tmp = this.state;\n      this.setState({ ...tmp,\n        loading: true,\n        data: responseJson.contents\n      });\n      console.log(responseJson);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  renderContents(i, c = \"\") {\n    return /*#__PURE__*/_jsxDEV(Contents, {\n      title: i.title,\n      text: i.main,\n      date: i.updatedAt,\n      class: c + \" maincontent\",\n      img: i.thumbnail.url\n    }, i.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    if (this.state.loading) {\n      let p = this.state.param.p;\n      console.log(this.state);\n      let hoge = \"\";\n      if (Math.sign(p)) hoge = \"articleList\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: this.state.data.map(d => {\n          return this.renderContents(d, hoge);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default MainContents;","map":{"version":3,"sources":["C:/Users/moonh/Documents/GitHub/react-demo-app1/src/MainContents.js"],"names":["React","Contents","MainContents","Component","constructor","props","state","loading","param","componentDidMount","urlParamStr","window","location","search","substring","params","split","forEach","temp","tmp","setState","key","headers","fetch","then","response","json","responseJson","data","contents","console","log","catch","error","renderContents","i","c","title","main","updatedAt","thumbnail","url","id","render","p","hoge","Math","sign","map","d"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Contents from './contents';\r\n\r\nclass MainContents extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false,\r\n            param: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //URLパラメータを文字列で取得(?含む)\r\n        let urlParamStr = window.location.search\r\n        if (urlParamStr) {\r\n            //?を除去\r\n            urlParamStr = urlParamStr.substring(1)\r\n            let params = {}\r\n            //urlパラメータをオブジェクトにまとめる\r\n            urlParamStr.split('&').forEach(param => {\r\n                const temp = param.split('=')\r\n                //pramsオブジェクトにパラメータを追加\r\n                params = {\r\n                    ...params,\r\n                    [temp[0]]: temp[1]\r\n                }\r\n            })\r\n            let tmp = this.state;\r\n            this.setState({\r\n                ...tmp,\r\n                param: params\r\n            })\r\n        }\r\n\r\n        // 記事を取得\r\n        const key = {\r\n            headers: { 'X-API-KEY': '9b30e206-4b28-4453-91f5-5d39d40d15a3' },\r\n        };\r\n        return fetch('https://ponsuke.microcms.io/api/v1/diary', key)\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                let tmp = this.state;\r\n                this.setState({\r\n                    ...tmp,\r\n                    loading: true,\r\n                    data: responseJson.contents,\r\n                });\r\n                console.log(responseJson)\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    renderContents(i, c = \"\") {\r\n        return <Contents\r\n            key={i.id}\r\n            title={i.title}\r\n            text={i.main}\r\n            date={i.updatedAt}\r\n            class={c + \" maincontent\"}\r\n            img={i.thumbnail.url}\r\n        />;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            let p = this.state.param.p;\r\n            console.log(this.state)\r\n            let hoge = \"\";\r\n            if (Math.sign(p)) hoge = \"articleList\";\r\n\r\n            return (\r\n                <div id=\"main\" >\r\n                    {this.state.data.map(d => {\r\n                        return this.renderContents(d, hoge)\r\n                    })}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p>Loading...</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default MainContents;"]},"metadata":{},"sourceType":"module"}